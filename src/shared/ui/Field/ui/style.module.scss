@import "@/app/styles/mixins", "@/app/styles/media", "@/app/styles/animations";

.wrapper {
  --paddingInline: var(--padding-medium);
  --height: var(--button-height-medium);
  display: flex;
  flex-direction: column;
  row-gap: var(--gap-small-s);
  width: 100%;
}

.field-wrapper {
  position: relative;
  display: flex;
  flex-direction: column;
  row-gap: var(--gap-small-s);
}

.field {
  position: relative;
  width: 100%;
  border-radius: var(--border-radius-medium);
  border: none;
  outline: none;
  transition-duration: 0.2s;
  height: var(--height);
  overflow: hidden;
  cursor: text;
  display: flex;
}

.input {
  width: 100%;
  padding-left: var(--paddingInline);
  padding-right: calc(var(--paddingInline) - 6px);
  border: none;
  color: inherit;
  &::placeholder {
    opacity: var(--opacity-medium);
    color: inherit;
  }
}

.label {
  transition-duration: 0.2s;
  pointer-events: none;
  line-height: 1;
  z-index: 1;
  &:after {
    content: "*";
    color: var(--red-500);
    display: none;
  }
}

.buttons {
  padding-right: calc(var(--paddingInline) - 6px);
  display: flex;
  align-items: center;
  pointer-events: none;
  svg {
    fill: var(--primary-200);
    stroke: var(--primary-200);
    transition-duration: 0.2s;
  }
}

.open-menu-button {
  svg {
    transform: rotate(-90deg);
  }
}

.clear-field-button {
  opacity: 0;
}

.error-message {
  font-size: var(--font-size-small);
  color: var(--red-500);
  padding-left: var(--paddingInline);
  user-select: text;
  max-width: 100%;
  animation: appearance-right 0.5s;
}

// Variants
.wrapper {
  &.outlined {
    .field {
      background-color: var(--light);
      border: var(--border-secondary);
      @include hover {
        border-color: var(--primary-300);
      }
    }
    &.focused {
      .field {
        border-color: var(--primary-500);
      }
    }
  }
}

// Label Variants
.wrapper {
  &.jump {
    .label {
      position: absolute;
      top: 50%;
      translate: 0 -50%;
      opacity: var(--opacity-medium);
      margin-left: var(--paddingInline);
      &:before {
        z-index: -1;
        content: '';
        position: absolute;
        height: 100%;
        width: 120%;
        top: 50%;
        left: 50%;
        translate: -50% -50%;
      }
    }
    .input::placeholder {
      opacity: 0;
    }
    &.dirty,
    &.focused {
      .label {
        top: 1px;
        opacity: 1;
        font-size: var(--font-size-small);
        &:before {
          background-color: var(--light);
        }
      }
    }
    &.focused:not(.dirty) {
      .input::placeholder {
        opacity: var(--opacity-medium);
        transition-duration: 0.2s;
      }
    }
  }

  &.static {
    .label {
      padding-left: var(--paddingInline);
    }
  }
}

// Sizes
.wrapper {
  &.small {
    --height: var(--input-height-small);
    --paddingInline: var(--padding-medium);
    .input {
      padding-block: var(--padding-small-s);
    }
  }
  &.medium {
    --paddingInline: var(--padding-medium);
    --height: var(--input-height-medium);
    .input {
      padding-block: var(--padding-small-l);
    }
  }
  &.large {
    --paddingInline: var(--padding-large);
    --height: var(--input-height-large);
    .input {
      padding-block: var(--padding-medium);
    }
  }
}

// Mods
.wrapper {
  &.readonly {
    pointer-events: none;
  }
  &.disabled {
    pointer-events: none;
    opacity: var(--opacity-medium);
  }
  &.required {
    .label:after {
        display: inline;
    }
  }
  &.errored {
    .field-wrapper {
      animation: snaking 0.5s;
    }
    .field {
      border-color: var(--red-500);
    }
    .label {
      color: var(--red-500);
    }
  }
  &:focus-within {
    .buttons{
      pointer-events: all;
      svg {
        fill: var(--primary-500);
        stroke: var(--primary-500);
      }
    }
  }
  &:focus-within  {
    .clear-field-button {
      opacity: 1;
    }
  }
}


