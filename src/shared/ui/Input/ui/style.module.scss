@import "@/app/styles/mixins", "@/app/styles/media";

.wrapper {
  --paddingInline: var(--padding-medium);
  display: flex;
  flex-direction: column;
  row-gap: 8px;
  color: var(--color-dark);

  // Variants
  &.primary {
    .input {
      box-shadow: 0 0 2px var(--color-primary);
      background-color: var(--color-secondary);
      &:focus {
        background-color: var(--color-light);
      }
    }
    @include hover {
      .input {
        background-color: var(--color-light);
      }
    }
  }

  &.transparent {
    .input {
      box-shadow: 0 0 2px var(--color-primary);
      &:focus {
        background-color: var(--theme-color-opacity);
      }
    }
    @include hover {
      .input {
        background-color: var(--theme-color-opacity);
      }
    }
  }

  // Label Variants
  &.jump {
    .input::placeholder {
      opacity: 0;
    }
    .label {
      top: 50%;
      translate: 0 -50%;
      opacity: var(--opacity-medium);
      transition-duration: var(--transition-duration);
    }

    &.dirty,
    &:focus-within {
      .label {
        translate: 0;
        top: -1.5em;
        font-size: var(--font-size-label);
        opacity: var(--opacity-small);
      }
    }
    &:focus-within {
      .input::placeholder {
        opacity: var(--opacity-medium);
      }
    }
  }

  &.none {
    .label {
      @include visually-hidden;
    }
  }

  &.static {
    .label {
      top: -1.5em;
      font-size: var(--font-size-label);
      opacity: var(--opacity-small);
    }
  }

  // Size
  &.medium {
    .input {
      height: var(--button-height-medium);
    }
  }
  &.large {
    --paddingInline: var(--padding-large);
    .input {
      height: var(--button-height-large);
    }
  }

  // Mods
  &.error {
    color: var(--color-error);
    animation: error 0.5s;
  }
  &.readonly {
    pointer-events: none;
  }
  &.disabled {
    pointer-events: none;
    opacity: var(--opacity-medium);
  }
  &.required {
    .label {
      &:after {
        display: inline;
      }
    }
  }
  &.search {
    .input {
      padding-right: calc(var(--paddingInline) + 60px);
    }
  }
  &.password {
    .input {
      padding-right: calc(var(--paddingInline) + 50px);
    }
  }
  // Action buttons
  &:focus-within.dirty {
    .clear-button {
      opacity: 1;
      pointer-events: all;
    }
  }
  &:focus-within {
    .buttons:not(.clear-button) {
      pointer-events: all;
      opacity: 1;
    }
  }
}

.field {
  position: relative;
}

.input {
  width: 100%;
  border-radius: var(--border-radius-small);
  border: none;
  outline: none;
  padding-inline: var(--paddingInline);
  padding-right: calc(var(--paddingInline) + 30px);
  color: inherit;
  transition-duration: 0.2s;

  &::placeholder {
    opacity: var(--opacity-medium);
    color: inherit;
    transition-duration: 0.1s;
  }
}

.label {
  position: absolute;
  left: var(--paddingInline);
  pointer-events: none;
  &:after {
    content: "*";
    color: var(--color-error);
    display: none;
  }
}

.buttons {
  position: absolute;
  top: 50%;
  translate: 0 -50%;
  right: var(--paddingInline);
  display: flex;
  align-items: center;
  pointer-events: none;
  column-gap: var(--padding-medium);
}

.clear-button {
  opacity: 0;
}

.error-message {
  color: var(--color-red);
  font-size: var(--font-size-label);
  padding-left: var(--padding-medium);
}

@keyframes error {
  0% {
    transform: translateX(0%);
  }
  15% {
    transform: translateX(-5%);
  }
  30% {
    transform: translateX(5%);
  }
  45% {
    transform: translateX(-5%);
  }
  60% {
    transform: translateX(4%);
  }
  80% {
    transform: translateX(-3%);
  }
  100% {
    transform: translateX(0%);
  }
}