@import "@/app/styles/mixins", '@/app/styles/media';

.wrapper {
  --paddingInline: var(--padding-medium);
  display: flex;
  flex-direction: column;
  row-gap: 8px;
  color: var(--color-primary);

  // Variant
  &.primary {
    .input {
      border: var(--border);
      background-color: var(--color-secondary);
      &:focus {
        border-color: var(--color-focus);
      }
    }
    @include hover {
      .input {
        border-color: var(--color-focus);
      }
    }
  }

  &.transparent {
    .input {
      border: var(--border);
      &:focus {
          border-color: var(--color-focus);
    }
    }
    @include hover {
      .input {
        border-color: var(--color-focus);
      }
    }
  }

  &.secondary {
    .input {
      border-bottom: var(--border);
      border-radius: var(--border-radius-small) var(--border-radius-small) 0 0 ;
      @include hover {
        border-color: var(--color-focus);
      }
      &:focus {
          border-color: var(--color-focus);
    }
    }
  }

  // Label Variants
  &.jump {
    .input::placeholder {
      opacity: 0;
    }
    .label {
      top: 50%;
      translate: 0 -50%;
      opacity: var(--opacity-medium);
      transition-duration: var(--transition-duration);

    }

    &.dirty,
    &:focus-within {
      .label {
        translate: 0;
        top: -1.5em;
        font-size: var(--font-size-label);
        opacity: var(--opacity-small);
      }
    }
    &:focus-within {
      .input::placeholder {
        opacity: var(--opacity-medium);
      }
    }
  }

  &.none {
    .label {
      @include visually-hidden;
    }
  }

  &.static {
    .label {
      top: -1.5em;
      font-size: var(--font-size-label);
      opacity: var(--opacity-small);
      color: var(--color-primary);
    }
  }

  // Size
  &.medium {
    .input {
      height: var(--button-height-medium);
    }
  }

  &.large {
    --paddingInline: var(--padding-large);
    .input {
      height: var(--button-height-large);
    }
  }

  // Mods
  &.error {
    color: var(--color-error);
  }

  &.readonly {
    pointer-events: none;
  }

  &.disabled {
    pointer-events: none;
    opacity: var(--opacity-medium);
  }

  &.required {
    .label {
        &:after {
            display: inline;
        }
    }
}

  &:focus-within.dirty {
	  .clear-button {
		  opacity: 1;
		  pointer-events: all;
	  }
  }
  &:focus-within {
    .password-button {
      pointer-events: all;
      opacity: 1;
    }
  }
  
}

.field {
  position: relative;
}

.input {
  width: 100%;
  border-radius: var(--border-radius-small);
  border: none;
  outline: none;
  padding-inline: var(--paddingInline);
  color: inherit;
  transition-duration: 0.2s;

  &::placeholder {
    opacity: var(--opacity-medium);
    color: inherit;
    transition-duration: 0.1s;
  }
}

.label {
  position: absolute;
  left: var(--paddingInline);
  pointer-events: none;

  &:after {
    content: '*';
    color: var(--color-error);
    display: none;
}
}

.buttons {
  position: absolute;
  top: 50%;
  translate: 0 -50%;
  right: var(--paddingInline);
  display: flex;
  align-items: center;
  pointer-events: none;
}

.clear-button {
  opacity: 0;
}

.password-button {
  
}

.error-message {
  color: var(--color-red);
  font-size: var(--font-size-label);
  padding-left: var(--padding-medium);
}

